import React, { useState, useContext } from 'react';
import BufferOverflowOnStack from './Subexploits/BufferOverflowOnStack';
import HeapMetadataCorruption from './Subexploits/HeapMetadataCorruption';
import StackOverflow from './Subexploits/StackOverflow';
import { WasmErrorContext } from '../../../App';
import '../../../styles/memory-safety/index.css';

const MemorySafety: React.FC = () => {
  const [activeTab, setActiveTab] = useState<string>('buffer overflow on stack');
  const { clearErrors } = useContext(WasmErrorContext);

  const changeTab = (tab: string) => {
    setActiveTab(tab);
    clearErrors(); // Clear errors when changing tabs
  };

  return (
    <div id="memory-safety" className="page active">
      <h2>Memory Safety Vulnerabilities</h2>
      <p className="section-intro">
        Memory safety vulnerabilities occur when programs improperly access memory locations,
        potentially leading to program crashes, data corruption, or even arbitrary code execution.
        WebAssembly has stronger memory safety guarantees than C/C++, but vulnerabilities can still occur.
      </p>
      
      <div className="tabs memory-safety-tabs">
        <button 
          className={`tab-btn ${activeTab === 'buffer overflow on stack' ? 'active' : ''}`}
          onClick={() => changeTab('buffer overflow on stack')}
        >
          Buffer Overflow on Stack
        </button>
        <button 
          className={`tab-btn ${activeTab === 'heap metadata corruption' ? 'active' : ''}`}
          onClick={() => changeTab('heap metadata corruption')}
        >
          Heap Metadata Corruption
        </button>
        <button 
          className={`tab-btn ${activeTab === 'stack overflow' ? 'active' : ''}`}
          onClick={() => changeTab('stack overflow')}
        >
          Stack Overflow
        </button>
      </div>
      
      <div className="memory-safety-content">
        {activeTab === 'buffer overflow on stack' && <BufferOverflowOnStack />}
        {activeTab === 'heap metadata corruption' && <HeapMetadataCorruption />}
        {activeTab === 'stack overflow' && <StackOverflow />}
      </div>
    </div>
  );
};

export default MemorySafety;
