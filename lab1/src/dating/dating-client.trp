(* Placeholder for the dating-client. Note that in order to communicate 
   with your server you will need to create the corresponding trustmap *)
   
import lists
let 
   fun client () =
      let val _ = receive [hn ("NEWMATCH", _)
            => (printString "New match received")
         ]
      in client ()
      end

   fun rejectAll _ () =
      (false, ())

   fun main () =       
      let val thisNode = node (self ())
          val _ = printString ("Running node with identifier: " ^ thisNode)
          val _ =  register ("datingClient", spawn client, authority)
          val securityLevel = '{alice}'
          val name = "Alice" raisedTo '{alice}'
          val yearOfBirth = 1999 raisedTo '{alice}'
          val isFemale = true raisedTo '{alice}'
          val interests = ["Hiking", "Biking"] raisedTo '{alice}'
          val profile = (securityLevel, name, yearOfBirth, isFemale, interests)
   in
      send ("QmWoe9ofTc42sjuueJiw6YcAYVq9Yi6DVijjoZTYZhiehr", ("NEWPROFILE", (profile, rejectAll, thisNode)));
      ()
   end
in main ()
end